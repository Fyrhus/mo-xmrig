on:
  workflow_dispatch:
  push:
    branches:
      - master

name: Create release and build artifacts

jobs:
  build_linux:
    name: Build Ubuntu artifacts
    runs-on: ubuntu-20.04
    steps:
      - name: Prepare Ubuntu tools
        run: |
          sudo apt update
          sudo apt install -y git build-essential cmake libuv1-dev libssl-dev libhwloc-dev libx11-dev libxss-dev
      - name: Checkout code
        uses: actions/checkout@master
      - name: Build project on Ubuntu
        run: |
          cmake .
          make -j$(nproc)
          cp src/config.json .
          tar cfz ubuntu_build.tar.gz xmrig config.json
      - name: Upload Ubuntu build artifacts
        uses: actions/upload-artifact@v1
        with:
          name: ubuntu_build
          path: ubuntu_build.tar.gz

  deploy:
    needs: [build_linux]
    name: Create release and upload artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Get version
        id: version
        run: |
          str=$(grep '#define APP_VERSION' ./src/version.h)
          str=${str#*$'\x22'}
          str=${str%%$'\x22'*}
          echo ::set-output name=VERSION::${str}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{steps.version.outputs.VERSION}}
          release_name: Release ${{steps.version.outputs.VERSION}}
          draft: true
          prerelease: false
      - name: Download Ubuntu build artifacts
        uses: actions/download-artifact@v1
        with:
          name: ubuntu_build
      - name: Upload Ubuntu build release asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ubuntu_build/ubuntu_build.tar.gz
          asset_name: xmrig-${{steps.version.outputs.VERSION}}.tar.gz
          asset_content_type: application/zip
